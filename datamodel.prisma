type User {
  username: String! @unique
  password: String!
  name: String!
  campus: String
  department: String
  dob: DateTime
  email: String!
  level: Int!
  id: ID! @id
}
type Problem {
  id: ID! @id
  queID: String!
  studID: String!
  description: String!
  status: Int! @default(value: 0)
  course: String!
  campus: String
  department: String
  facultyID: String!
}
type CourseInstance {
  id: ID! @id
  studID: String!
  facultyID: String!
  questions: [Link]!
  completed: Int! @default(value: 0)
  total: Int! @default(value: 0)
  course: String!
  campus: String!
  department: String!
  status: Boolean!
  studentName: String!
  studentReg: String!
}
type Link @embedded {
  id: String!
  status: Int! @default(value: 0)
  ans: String @default(value: "")
}
type Global {
  regs: Boolean @default(value: true)
  regf: Boolean @default(value: true)
  defaultCourses: [DefaultCourse]!
  id: String! @default(value: "global") @unique
  _id: ID! @id
}

type DefaultCourse @embedded {
  name: String!
  branch: String!
  automated: Boolean @default(value: false)
}

type Tag @embedded {
  name: String!
  id: String!
}
type Campus {
  id: ID! @id @unique
  admin_id: String!
  departments: [Tag]
  name: String! @unique
}
type Branch {
  id: ID! @id
  name: String! @unique
}
type Course {
  id: ID! @id
  branch: String!
  coordinator_id: String!
  name: String!
  automated: Boolean @default(value: false)
  campus: String!
}
type Question {
  id: ID! @id
  course: String!
  name: String!
  desc: String!
  exp: String!
  opt: Options!
  ans: String!
}
type Options @embedded {
  a: String!
  b: String!
  c: String!
  d: String!
}
type Recovery {
  id: ID! @id
  token: String! @unique
  username: String!
  email: String!
}
